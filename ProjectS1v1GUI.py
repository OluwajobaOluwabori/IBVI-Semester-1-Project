# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ProjectS1v1GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(975, 566)
        # sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        # sizePolicy.setHorizontalStretch(0)
        # sizePolicy.setVerticalStretch(0)
        # sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        # MainWindow.setSizePolicy(sizePolicy)
        # MainWindow.setMinimumSize(QtCore.QSize(0, 0))
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        # sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        # sizePolicy.setHorizontalStretch(0)
        # sizePolicy.setVerticalStretch(0)
        # sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        # self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setSpacing(0)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.icon_only_widget = QtWidgets.QWidget(self.centralwidget)
        self.icon_only_widget.setMinimumWidth(50)
        self.icon_only_widget.setStyleSheet("""
                    QWidget { background-color: rgb(230, 237, 237); }
                    QPushButton { text-align: left; color: gray; height: 15px; border: none; padding-left: 5px; }
                    QPushButton:checked { background-color: #F5FAFE; color: #1F95EF; font-weight: bold; }
                """)

        self.icon_only_widget.setObjectName("icon_only_widget")
        # self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.icon_only_widget)
        # self.verticalLayout_3.setContentsMargins(-1, 0, 0, 0)
        # self.verticalLayout_3.setSpacing(15)
        # self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.icon_only_widget)
        self.verticalLayout_4.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout_4.setContentsMargins(9, 9, 9, 9)
        self.verticalLayout_4.setSpacing(15)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.pbDataManagement1 = QtWidgets.QPushButton(self.icon_only_widget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.pbDataManagement1.setFont(font)
        self.pbDataManagement1.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/profile2.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon.addPixmap(QtGui.QPixmap(":/profile.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.pbDataManagement1.setIcon(icon)
        self.pbDataManagement1.setCheckable(True)
        self.pbDataManagement1.setAutoExclusive(True)
        self.pbDataManagement1.setObjectName("pbDataManagement1")
        self.verticalLayout_4.addWidget(self.pbDataManagement1)
        self.pbDataAnalysis1 = QtWidgets.QPushButton(self.icon_only_widget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pbDataAnalysis1.setFont(font)
        self.pbDataAnalysis1.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons8-graphique-combiné-48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon1.addPixmap(QtGui.QPixmap(":/icons8-graphique-combiné-481.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.pbDataAnalysis1.setIcon(icon1)
        self.pbDataAnalysis1.setCheckable(True)
        self.pbDataAnalysis1.setAutoExclusive(True)
        self.pbDataAnalysis1.setObjectName("pbDataAnalysis1")
        self.verticalLayout_4.addWidget(self.pbDataAnalysis1)

        self.pbImageProcessing1 = QtWidgets.QPushButton(self.icon_only_widget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pbImageProcessing1.setFont(font)
        self.pbImageProcessing1.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons8-image-48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon3.addPixmap(QtGui.QPixmap(":/icons8-image-24.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.pbImageProcessing1.setIcon(icon3)
        self.pbImageProcessing1.setCheckable(True)
        self.pbImageProcessing1.setAutoExclusive(True)
        self.pbImageProcessing1.setObjectName("pbImageProcessing1")
        self.verticalLayout_4.addWidget(self.pbImageProcessing1)
        # self.verticalLayout_3.addLayout(self.verticalLayout_4)
        self.pbSpectrumAnalysis1 = QtWidgets.QPushButton(self.icon_only_widget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pbSpectrumAnalysis1.setFont(font)
        self.pbSpectrumAnalysis1.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons8-signal-rfid-50.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon2.addPixmap(QtGui.QPixmap(":/icons8-signal-rfid-30.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.pbSpectrumAnalysis1.setIcon(icon2)
        self.pbSpectrumAnalysis1.setCheckable(True)
        self.pbSpectrumAnalysis1.setAutoExclusive(True)
        self.pbSpectrumAnalysis1.setObjectName("pbSpectrumAnalysis1")
        self.verticalLayout_4.addWidget(self.pbSpectrumAnalysis1)
        spacerItem = QtWidgets.QSpacerItem(20, 253, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_4.addItem(spacerItem)
        self.verticalLayout_4.addStretch()

        self.horizontalLayout_8.addWidget(self.icon_only_widget)
        self.icon_name_widget = QtWidgets.QWidget(self.centralwidget)
        self.icon_name_widget.setStyleSheet("QWidget{background-color:rgb(230, 237, 237);\n"
"}\n"
"QPushButton{text-align:left;color:gray;height:15px;border:none;padding-left:5px;border-top-left-radius:10px;border-bottom-left-radius:10px;}QLabel{color:gray;}\n"
"QPushButton:checked{background-color: #F5FAFE;\n"
"color:#1F95EF; font-weight:bold;\n"
"}")
        self.icon_name_widget.setObjectName("icon_name_widget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.icon_name_widget)
        self.verticalLayout_2.setContentsMargins(7, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout.setContentsMargins(9, 9, 9, 9)
        self.verticalLayout.setSpacing(22)
        self.verticalLayout.setObjectName("verticalLayout")
        self.pbDataManagement2 = QtWidgets.QPushButton(self.icon_name_widget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pbDataManagement2.setFont(font)
        self.pbDataManagement2.setIcon(icon)
        self.pbDataManagement2.setCheckable(True)
        self.pbDataManagement2.setAutoExclusive(True)
        self.pbDataManagement2.setObjectName("pbDataManagement2")
        self.verticalLayout.addWidget(self.pbDataManagement2)
        self.pbDataAnalysis2 = QtWidgets.QPushButton(self.icon_name_widget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pbDataAnalysis2.setFont(font)
        self.pbDataAnalysis2.setIcon(icon1)
        self.pbDataAnalysis2.setCheckable(True)
        self.pbDataAnalysis2.setAutoExclusive(True)
        self.pbDataAnalysis2.setObjectName("pbDataAnalysis2")
        self.verticalLayout.addWidget(self.pbDataAnalysis2)
        self.pbSpectrumAnalysis2 = QtWidgets.QPushButton(self.icon_name_widget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pbSpectrumAnalysis2.setFont(font)
        self.pbSpectrumAnalysis2.setIcon(icon2)
        self.pbSpectrumAnalysis2.setCheckable(True)
        self.pbSpectrumAnalysis2.setAutoExclusive(True)
        self.pbSpectrumAnalysis2.setObjectName("pbSpectrumAnalysis2")
        self.verticalLayout.addWidget(self.pbSpectrumAnalysis2)
        self.pbImageProcessing2 = QtWidgets.QPushButton(self.icon_name_widget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pbImageProcessing2.setFont(font)
        self.pbImageProcessing2.setIcon(icon3)
        self.pbImageProcessing2.setCheckable(True)
        self.pbImageProcessing2.setAutoExclusive(True)
        self.pbImageProcessing2.setObjectName("pbImageProcessing2")
        self.verticalLayout.addWidget(self.pbImageProcessing2)
        self.verticalLayout_2.addLayout(self.verticalLayout)
        spacerItem1 = QtWidgets.QSpacerItem(20, 253, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem1)
        self.horizontalLayout_8.addWidget(self.icon_name_widget)
        self.main_menu = QtWidgets.QWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.main_menu.sizePolicy().hasHeightForWidth())
        self.main_menu.setSizePolicy(sizePolicy)
        self.main_menu.setObjectName("main_menu")
        self.verticalLayout_26 = QtWidgets.QVBoxLayout(self.main_menu)
        self.verticalLayout_26.setContentsMargins(-1, 0, 0, 0)
        self.verticalLayout_26.setObjectName("verticalLayout_26")
        self.verticalLayout_22 = QtWidgets.QVBoxLayout()
        self.verticalLayout_22.setObjectName("verticalLayout_22")
        self.verticalLayout_26.addLayout(self.verticalLayout_22)
        self.widget = QtWidgets.QWidget(self.main_menu)
        self.widget.setObjectName("widget")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pbMenu = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setKerning(True)
        self.pbMenu.setFont(font)
        self.pbMenu.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/menu.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pbMenu.setIcon(icon4)
        self.pbMenu.setCheckable(True)
        self.pbMenu.setObjectName("pbMenu")
        self.horizontalLayout.insertWidget(0, self.pbMenu)
        spacerItem2 = QtWidgets.QSpacerItem(218, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem2)
        self.ECGlabel = QtWidgets.QLabel(self.widget)
        self.ECGlabel.setStyleSheet("font: 15pt \"MS Shell Dlg 2\";")
        self.ECGlabel.setAlignment(QtCore.Qt.AlignCenter)
        self.ECGlabel.setObjectName("ECGlabel")
        self.horizontalLayout.addWidget(self.ECGlabel)
        spacerItem3 = QtWidgets.QSpacerItem(98, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem3)
        self.horizontalLayout_4.addLayout(self.horizontalLayout)
        self.verticalLayout_26.addWidget(self.widget)
        self.stackedWidget = QtWidgets.QStackedWidget(self.main_menu)
        self.stackedWidget.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.stackedWidget.sizePolicy().hasHeightForWidth())
        self.stackedWidget.setSizePolicy(sizePolicy)
        self.stackedWidget.setStyleSheet("")
        self.stackedWidget.setObjectName("stackedWidget")


        self.ManageData_6 = QtWidgets.QWidget()
        self.ManageData_6.setObjectName("ManageData_6")
        self.dataLayout = QtWidgets.QVBoxLayout(self.ManageData_6)

        # Title Label
        self.titleLabel = QtWidgets.QLabel("Data Management")
        self.titleLabel.setAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        self.titleLabel.setFont(font)
        self.dataLayout.addWidget(self.titleLabel)

        # Data Source Section
        self.dataSourceGroupBox = QtWidgets.QGroupBox("Data Source")
        self.dataSourceLayout = QtWidgets.QHBoxLayout(self.dataSourceGroupBox)

        self.loadCSVButton = QtWidgets.QPushButton("Load CSV")
        self.loadCSVButton.setToolTip("Load patient data from a CSV file.")
        self.dataSourceLayout.addWidget(self.loadCSVButton)

        self.connectDBButton = QtWidgets.QPushButton("Connect to Database")
        self.connectDBButton.setToolTip("Connect to a database (SQLite, MySQL, PostgreSQL).")
        self.dataSourceLayout.addWidget(self.connectDBButton)

        self.dataLayout.addWidget(self.dataSourceGroupBox)

        # Database Operations
        self.dbOperationsGroupBox = QtWidgets.QGroupBox("Database Operations")
        self.dbOperationsLayout = QtWidgets.QGridLayout(self.dbOperationsGroupBox)

        # Insert Data Button
        self.insertDataButton = QtWidgets.QPushButton("Insert New Data")
        self.insertDataButton.setToolTip("Insert new patient data into the database.")
        self.dbOperationsLayout.addWidget(self.insertDataButton, 0, 0)

        # Retrieve Data Button
        self.retrieveDataButton = QtWidgets.QPushButton("Retrieve Data")
        self.retrieveDataButton.setToolTip("Retrieve data from the database.")
        self.dbOperationsLayout.addWidget(self.retrieveDataButton, 0, 1)

        # Update Data Button
        self.updateDataButton = QtWidgets.QPushButton("Update Data")
        self.updateDataButton.setToolTip("Update existing records in the database.")
        self.dbOperationsLayout.addWidget(self.updateDataButton, 1, 0)

        # Delete Data Button
        self.deleteDataButton = QtWidgets.QPushButton("Delete Data")
        self.deleteDataButton.setToolTip("Delete selected records from the database.")
        self.dbOperationsLayout.addWidget(self.deleteDataButton, 1, 1)

        self.dataLayout.addWidget(self.dbOperationsGroupBox)

        # Table View
        self.tableGroupBox = QtWidgets.QGroupBox("Loaded or Retrieved Data")
        self.tableLayout = QtWidgets.QVBoxLayout(self.tableGroupBox)

        self.dataTable = QtWidgets.QTableWidget()
        self.dataTable.setColumnCount(26)  # Total number of columns in your dataset
        self.dataTable.setHorizontalHeaderLabels([
            "Patient ID", "Age", "Sex", "Cholesterol", "Blood Pressure", "Heart Rate", "Diabetes",
            "Family History", "Smoking", "Obesity", "Alcohol Consumption", "Exercise Hours Per Week",
            "Diet", "Previous Heart Problems", "Medication Use", "Stress Level",
            "Sedentary Hours Per Day", "Income", "BMI", "Triglycerides",
            "Physical Activity Days Per Week", "Sleep Hours Per Day", "Country", "Continent",
            "Hemisphere", "Heart Attack Risk"
        ])
        self.dataTable.setSortingEnabled(True)

        self.dataTable.horizontalHeader().setStretchLastSection(True)
        self.dataTable.verticalHeader().setVisible(False)
        self.dataTable.setSelectionBehavior(QtWidgets.QTableView.SelectRows)
        self.dataTable.setSelectionMode(QtWidgets.QTableView.SingleSelection)
        self.tableLayout.addWidget(self.dataTable)

        self.dataLayout.addWidget(self.tableGroupBox)

        # Add to Stacked Widget
        self.stackedWidget.addWidget(self.ManageData_6)

        # DATA ANALYSIS
        self.Data_6 = QtWidgets.QWidget()
        self.Data_6.setObjectName("Data_6")
        self.tabWidget = QtWidgets.QTabWidget(self.Data_6)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 561, 571))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.widget1 = QtWidgets.QWidget(self.tab)
        self.widget1.setGeometry(QtCore.QRect(8, -2, 531, 593))
        self.widget1.setObjectName("widget1")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget1)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.groupBox_2 = QtWidgets.QGroupBox(self.widget1)
        self.groupBox_2.setMinimumSize(QtCore.QSize(0, 0))
        self.groupBox_2.setMaximumSize(QtCore.QSize(1000, 16777215))
        self.groupBox_2.setTitle("")
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout.setObjectName("gridLayout")
        self.label = QtWidgets.QLabel(self.groupBox_2)
        self.label.setMaximumSize(QtCore.QSize(40, 16777215))
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 2, 0, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.groupBox_2)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 3, 0, 1, 1)
        self.pbPlot = QtWidgets.QPushButton(self.groupBox_2)
        self.pbPlot.setObjectName("pbPlot")
        self.gridLayout.addWidget(self.pbPlot, 4, 0, 1, 2)
        self.cbY = QtWidgets.QComboBox(self.groupBox_2)
        self.cbY.setObjectName("cbY")
        self.gridLayout.addWidget(self.cbY, 3, 1, 1, 1)
        self.cbX = QtWidgets.QComboBox(self.groupBox_2)
        self.cbX.setObjectName("cbX")
        self.gridLayout.addWidget(self.cbX, 2, 1, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(20, 463, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem3, 5, 1, 1, 1)
        self.lblExcel = QtWidgets.QLabel(self.groupBox_2)
        self.lblExcel.setText("")
        self.lblExcel.setObjectName("lblExcel")
        self.gridLayout.addWidget(self.lblExcel, 1, 0, 1, 2)
        self.LoadBtn_excel = QtWidgets.QPushButton(self.groupBox_2)
        self.LoadBtn_excel.setObjectName("LoadBtn_excel")
        self.gridLayout.addWidget(self.LoadBtn_excel, 0, 0, 1, 2)
        self.horizontalLayout.addWidget(self.groupBox_2)
        self.mplwindow_2 = QtWidgets.QFrame(self.widget1)
        self.mplwindow_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.mplwindow_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.mplwindow_2.setObjectName("mplwindow_2")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.mplwindow_2)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.widget2 = QtWidgets.QWidget(self.mplwindow_2)
        self.widget2.setObjectName("widget2")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.widget2)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.verticalLayout_10.addWidget(self.widget2)
        self.horizontalLayout.addWidget(self.mplwindow_2)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.tab_2)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.tableWidget = QtWidgets.QTableWidget(self.tab_2)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.horizontalLayout_7.addWidget(self.tableWidget)
        self.tabWidget.addTab(self.tab_2, "")
        self.stackedWidget.addWidget(self.Data_6)
        self.Signal_6 = QtWidgets.QWidget()
        self.Signal_6.setObjectName("Signal_6")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.Signal_6)
        self.gridLayout_7.setContentsMargins(0, 0, -1, 0)
        self.gridLayout_7.setObjectName("gridLayout_7")
        # Adding a title to the main layout
        self.titleLabel = QtWidgets.QLabel("ECG Data Processing")
        self.titleLabel.setAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.titleLabel.setFont(font)

        self.gridLayout_7.addWidget(self.titleLabel, 0, 0, 1, 2)  # Spans two columns

        self.settingsLabel = QtWidgets.QLabel("Signal Processing Controls")
        self.settingsLabel.setAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.settingsLabel.setFont(font)

        self.gridLayout_7.addWidget(self.settingsLabel, 0, 0, 1, 1)  # Spans two columns

        # Settings Group Box
        self.settingsGroupBox = QtWidgets.QGroupBox("", self.Signal_6)
        self.settingsGroupBox.setStyleSheet("font-size: 10pt;")
        self.settingsLayout = QtWidgets.QVBoxLayout(self.settingsGroupBox)

        # Load Signal Button
        self.LoadBtnsignal = QtWidgets.QPushButton("Load Signal")
        self.LoadBtnsignal.setStyleSheet("background-color: #007bff; color: white; padding: 5px; border-radius: 5px;")
        self.LoadBtnsignal.setToolTip("Click to load ECG signal data.")
        self.settingsLayout.addWidget(self.LoadBtnsignal)

        # Time Navigation
        self.timeLayout = QtWidgets.QHBoxLayout()
        self.label_3 = QtWidgets.QLabel("Go to:")
        self.label_3.setObjectName("label_3")
        self.timeInput = QtWidgets.QLineEdit()
        self.timeInput.setObjectName("timeInput")
        self.updateTimeButton = QtWidgets.QPushButton()
        self.updateTimeButton.setIcon(QtGui.QIcon(":/icons8-lien-externe-32.png"))
        self.updateTimeButton.setObjectName("updateTimeButton")
        self.updateTimeButton.setToolTip("Update time range")
        self.timeLayout.addWidget(self.label_3)
        self.timeLayout.addWidget(self.timeInput)
        self.timeLayout.addWidget(self.updateTimeButton)
        self.settingsLayout.addLayout(self.timeLayout)
        #
        # self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        # self.verticalLayout_6.setObjectName("verticalLayout_6")
        #
        # self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        # self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        # self.label_2 = QtWidgets.QLabel(self.groupBox_)
        # self.label_2.setObjectName("label_2")
        # self.horizontalLayout_10.addWidget(self.label_2)
        # self.sliderLabel = QtWidgets.QLabel(self.groupBox_)
        # self.sliderLabel.setObjectName("sliderLabel")
        # self.horizontalLayout_10.addWidget(self.sliderLabel)
        # self.verticalLayout_6.addLayout(self.horizontalLayout_10)
        # self.windowDurationSlider = QtWidgets.QSlider(self.groupBox_)
        # self.windowDurationSlider.setRange(5, 60)  # 5 to 60 seconds
        # self.windowDurationSlider.setSingleStep(5)
        # self.windowDurationSlider.setValue(5)  # Default: 5 seconds
        # self.windowDurationSlider.setPageStep(5)
        # self.windowDurationSlider.setOrientation(QtCore.Qt.Horizontal)
        # self.windowDurationSlider.setObjectName("windowDurationSlider")
        # self.verticalLayout_6.addWidget(self.windowDurationSlider)
        # self.gridLayout.addLayout(self.verticalLayout_6, 3, 0, 1, 2)
        # spacerItem5 = QtWidgets.QSpacerItem(20, 0, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        # self.gridLayout.addItem(spacerItem5, 4, 0, 1, 1)
        #
        # Window Duration Slider
        self.windowDurationLayout = QtWidgets.QVBoxLayout()
        self.windowDurationLabel = QtWidgets.QLabel("Window Duration: 5 seconds")
        self.windowDurationLabel.setObjectName("windowDurationLabel")
        self.windowDurationSlider = QtWidgets.QSlider(QtCore.Qt.Horizontal)
        self.windowDurationSlider.setRange(5, 60)
        self.windowDurationSlider.setSingleStep(5)
        self.windowDurationSlider.setValue(5)
        self.windowDurationSlider.setObjectName("windowDurationSlider")
        self.windowDurationSlider.setToolTip("Adjust window duration for analysis")
        self.windowDurationLayout.addWidget(self.windowDurationLabel)
        self.windowDurationLayout.addWidget(self.windowDurationSlider)
        self.settingsLayout.addLayout(self.windowDurationLayout)
        # self.thresholdValueLabel = QtWidgets.QLabel(
        #         f"Threshold Level: {self.sliderThreshold.value()} (Min: 0, Max: 255)")
        # Norm Combo Box
        # self.NormComboBoxLayout = QtWidgets.QHBoxLayout()
        # self.label_50 = QtWidgets.QLabel("Norm:")
        # self.label_50.setObjectName("label_50")
        # self.NormcomboBox = QtWidgets.QComboBox()
        # self.NormcomboBox.addItems(["Norm 1", "Norm 2", "Norm 3"])
        # self.NormcomboBox.setToolTip("Select the norm for the Fourier Transform.")
        # self.settingsLayout.addWidget(self.NormcomboBox)
        # self.NormComboBoxLayout.addWidget(self.label_50)
        # self.NormComboBoxLayout.addWidget(self.NormcomboBox)
        # self.settingsLayout.addLayout(self.NormComboBoxLayout)

        # FFT Parameters
        self.fftGroup = QtWidgets.QGroupBox("FFT Parameters")
        self.fftLayout = QtWidgets.QHBoxLayout(self.fftGroup)

        self.label_50 = QtWidgets.QLabel("Norm:")
        self.NormcomboBox = QtWidgets.QComboBox()
        self.NormcomboBox.addItems(["forward", "backward", "ortho"])
        self.NormcomboBox.setToolTip("Select the norm for the Fourier Transform.")


        self.fftLayout.addWidget(self.label_50)
        self.fftLayout.addWidget(self.NormcomboBox)
        self.settingsLayout.addWidget(self.fftGroup)

        # Add Settings Group Box to Main Layout
        self.gridLayout_7.addWidget(self.settingsGroupBox, 1, 0)
        # self.gridLayout_7.addWidget(self.settingsLayout,1,0)


        # Charts Group Box
        # self.chartsGroupBox = QtWidgets.QGroupBox("Analysis Charts")
        # self.chartsGroupBox.setStyleSheet("font-weight: bold; font-size: 12pt;")
        # self.chartsLayout = QtWidgets.QVBoxLayout(self.chartsGroupBox)

        # self.mplwindow = QtWidgets.QFrame(self.Signal_6)
        # sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        # sizePolicy.setHorizontalStretch(0)
        # sizePolicy.setVerticalStretch(0)
        # sizePolicy.setHeightForWidth(self.mplwindow.sizePolicy().hasHeightForWidth())
        # self.mplwindow.setSizePolicy(sizePolicy)
        # self.mplwindow.setFrameShape(QtWidgets.QFrame.Box)
        # self.mplwindow.setFrameShadow(QtWidgets.QFrame.Raised)
        # self.mplwindow.setObjectName("mplwindow")
        # self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.mplwindow)
        # self.verticalLayout_7.setObjectName("verticalLayout_7")
        # self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        # self.verticalLayout_5.setObjectName("verticalLayout_5")
        # self.verticalLayout_7.addLayout(self.verticalLayout_5)
        # self.gridLayout_7.addWidget(self.mplwindow, 0, 1, 1, 1)
        #
        # self.gridLayout_7.setContentsMargins(10, 10, 10, 10)  # Add margin around main grid layout
        # self.gridLayout_7.setSpacing(10)  # Add spacing between widgets
        #
        # Matplotlib Placeholder Widget
        # self.mplwindow = QtWidgets.QWidget()
        # self.mplwindow.setStyleSheet("background-color: white; border: 1px solid #ccc;")
        # self.chartsLayout.addWidget(self.mplwindow)
        #
        # # Add Charts Group Box to Main Layout
        # self.gridLayout_7.addWidget(self.chartsGroupBox)

        # Validate Button
        # self.ValidateBtn = QtWidgets.QPushButton("Validate Analysis")
        # self.ValidateBtn.setStyleSheet("background-color: #28a745; color: white; padding: 5px; border-radius: 5px;")
        # self.ValidateBtn.setToolTip("Click to validate the analysis results.")
        # self.gridLayout_7.addWidget(self.ValidateBtn, 2, 0, 1, 2)  # Spanning two columns

        # Footer Label
        self.footerLabel = QtWidgets.QLabel("Developed by Godsfavour | Version 1.0")
        self.footerLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.footerLabel.setStyleSheet("color: gray; font-size: 10pt;")
        self.gridLayout_7.addWidget(self.footerLabel, 3, 0, 1, 2)  # Bottom of the layout
        # self.settingsGroupBox.setFlat(True)  # Makes it collapsible
        self.settingsLayout.addStretch(1)  # Adds space for better compression
        self.settingsGroupBox.setFixedWidth(200)  # Adjust width as needed

        # self.mplwindow = QtWidgets.QFrame(self.Signal_6)
        # sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        # sizePolicy.setHorizontalStretch(0)
        # sizePolicy.setVerticalStretch(0)
        # sizePolicy.setHeightForWidth(self.mplwindow.sizePolicy().hasHeightForWidth())
        # self.mplwindow.setSizePolicy(sizePolicy)
        # self.mplwindow.setFrameShape(QtWidgets.QFrame.Box)
        # self.mplwindow.setFrameShadow(QtWidgets.QFrame.Raised)
        # self.mplwindow.setObjectName("mplwindow")
        # self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.mplwindow)
        # self.verticalLayout_7.setObjectName("verticalLayout_7")
        # self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        # self.verticalLayout_5.setObjectName("verticalLayout_5")
        # self.verticalLayout_7.addLayout(self.verticalLayout_5)
        # self.gridLayout_7.addWidget(self.mplwindow, 0, 1, 1, 1)
        #
        # self.gridLayout_7.setContentsMargins(10, 10, 10, 10)  # Add margin around main grid layout
        # self.gridLayout_7.setSpacing(10)  # Add spacing between widgets
        #
        # self.groupBox_ = QtWidgets.QGroupBox("Settings")
        # font = QtGui.QFont()
        # font.setFamily("MS Shell Dlg 2")
        # font.setPointSize(10)
        # font.setBold(False)
        # font.setItalic(False)
        # font.setWeight(50)
        # self.groupBox_.setFont(font)
        # self.groupBox_.setStyleSheet("font: 10pt \"MS Shell Dlg 2\";")
        # self.groupBox_.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        # self.groupBox_.setObjectName("groupBox_")
        # self.gridLayout = QtWidgets.QGridLayout(self.groupBox_)
        # self.gridLayout.setObjectName("gridLayout")
        # self.LoadBtnsignal = QtWidgets.QPushButton(self.groupBox_)
        # self.LoadBtnsignal.setObjectName("LoadBtnsignal")
        #
        # self.gridLayout.addWidget(self.LoadBtnsignal, 0, 0, 1, 2)
        # spacerItem4 = QtWidgets.QSpacerItem(20, 18, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        # self.gridLayout.addItem(spacerItem4, 1, 1, 1, 1)
        # self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        # self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        # self.label_3 = QtWidgets.QLabel(self.groupBox_)
        # self.label_3.setObjectName("label_3")
        # self.horizontalLayout_5.addWidget(self.label_3)
        # self.timeInput = QtWidgets.QLineEdit(self.groupBox_)
        # self.timeInput.setObjectName("timeInput")
        # self.horizontalLayout_5.addWidget(self.timeInput)
        # self.updateTimeButton = QtWidgets.QPushButton(self.groupBox_)
        # self.updateTimeButton.setText("")
        # icon5 = QtGui.QIcon()
        # icon5.addPixmap(QtGui.QPixmap(":/icons8-lien-externe-32.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        # self.updateTimeButton.setIcon(icon5)
        # self.updateTimeButton.setObjectName("updateTimeButton")
        # self.horizontalLayout_5.addWidget(self.updateTimeButton)
        # self.gridLayout.addLayout(self.horizontalLayout_5, 2, 0, 1, 2)


        # self.label_48 = QtWidgets.QLabel(self.groupBox_)
        # self.label_48.setObjectName("label_48")
        # self.gridLayout.addWidget(self.label_48, 5, 0, 1, 2)
        # self.label_49 = QtWidgets.QLabel(self.groupBox_)
        # self.label_49.setObjectName("label_49")
        # self.gridLayout.addWidget(self.label_49, 6, 0, 1, 2)
        # self.horizontalLayout_32 = QtWidgets.QHBoxLayout()
        # self.horizontalLayout_32.setObjectName("horizontalLayout_32")
        # self.label_50 = QtWidgets.QLabel(self.groupBox_)
        # font = QtGui.QFont()
        # font.setPointSize(10)
        # self.label_50.setFont(font)
        # self.label_50.setObjectName("label_50")
        # self.horizontalLayout_32.addWidget(self.label_50)
        # self.NormcomboBox = QtWidgets.QComboBox(self.groupBox_)
        # font = QtGui.QFont()
        # font.setPointSize(10)
        # self.NormcomboBox.setFont(font)
        # self.NormcomboBox.setEditable(False)
        # self.NormcomboBox.setMaxCount(2147483646)
        # self.NormcomboBox.setObjectName("NormcomboBox")
        # self.NormcomboBox.addItem("")
        # self.NormcomboBox.addItem("")
        # self.NormcomboBox.addItem("")
        # self.horizontalLayout_32.addWidget(self.NormcomboBox)
        # self.gridLayout.addLayout(self.horizontalLayout_32, 7, 0, 1, 2)
        # spacerItem6 = QtWidgets.QSpacerItem(20, 18, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        # self.gridLayout.addItem(spacerItem6, 8, 0, 1, 1)
        # self.label_51 = QtWidgets.QLabel(self.groupBox_)
        # self.label_51.setObjectName("label_51")
        # self.gridLayout.addWidget(self.label_51, 9, 0, 1, 2)
        # self.horizontalLayout_33 = QtWidgets.QHBoxLayout()
        # self.horizontalLayout_33.setObjectName("horizontalLayout_33")
        # self.label_52 = QtWidgets.QLabel(self.groupBox_)
        # self.label_52.setSizeIncrement(QtCore.QSize(6, 7))
        # font = QtGui.QFont()
        # font.setPointSize(10)
        # self.label_52.setFont(font)
        # self.label_52.setObjectName("label_52")
        # self.horizontalLayout_33.addWidget(self.label_52)
        # self.WindowcomboBox = QtWidgets.QComboBox(self.groupBox_)
        # self.WindowcomboBox.setSizeIncrement(QtCore.QSize(6, 7))
        # font = QtGui.QFont()
        # font.setPointSize(10)
        # self.WindowcomboBox.setFont(font)
        # self.WindowcomboBox.setEditable(False)
        # self.WindowcomboBox.setMaxCount(2147483646)
        # self.WindowcomboBox.setObjectName("WindowcomboBox")
        # self.WindowcomboBox.addItem("")
        # self.WindowcomboBox.addItem("")
        # self.WindowcomboBox.addItem("")
        # self.horizontalLayout_33.addWidget(self.WindowcomboBox)
        # self.gridLayout.addLayout(self.horizontalLayout_33, 10, 0, 1, 2)
        # self.horizontalLayout_34 = QtWidgets.QHBoxLayout()
        # self.horizontalLayout_34.setObjectName("horizontalLayout_34")



        # self.label_53 = QtWidgets.QLabel(self.groupBox_)
        # self.label_53.setSizeIncrement(QtCore.QSize(6, 7))
        # font = QtGui.QFont()
        # font.setPointSize(10)
        # self.label_53.setFont(font)
        # self.label_53.setObjectName("label_53")
        # self.horizontalLayout_34.addWidget(self.label_53)
        # self.ScalingcomboBox = QtWidgets.QComboBox(self.groupBox_)
        # self.ScalingcomboBox.setSizeIncrement(QtCore.QSize(6, 7))
        # font = QtGui.QFont()
        # font.setPointSize(10)
        # self.ScalingcomboBox.setFont(font)
        # self.ScalingcomboBox.setEditable(False)
        # self.ScalingcomboBox.setMaxCount(2147483646)
        # self.ScalingcomboBox.setObjectName("ScalingcomboBox")
        # self.ScalingcomboBox.addItem("")
        # self.ScalingcomboBox.addItem("")
        # self.horizontalLayout_34.addWidget(self.ScalingcomboBox)
        # self.gridLayout.addLayout(self.horizontalLayout_34, 11, 0, 1, 2)

        # Periodogram Parameters
        self.periodogramGroup = QtWidgets.QGroupBox("Periodogram Parameters")
        self.periodogramLayout = QtWidgets.QVBoxLayout(self.periodogramGroup)

        # Scaling Combo Box
        self.scalingComboBoxLayout = QtWidgets.QHBoxLayout()
        self.label_53 = QtWidgets.QLabel("Scaling:")
        self.label_53.setObjectName("label_53")
        self.ScalingcomboBox = QtWidgets.QComboBox()
        self.ScalingcomboBox.setObjectName("ScalingcomboBox")
        self.ScalingcomboBox.addItems(["density", "spectrum"])
        self.ScalingcomboBox.setToolTip("Select scaling type for periodogram")
        self.scalingComboBoxLayout.addWidget(self.label_53)
        self.scalingComboBoxLayout.addWidget(self.ScalingcomboBox)

        # Add Scaling Layout to Periodogram Layout
        self.periodogramLayout.addLayout(self.scalingComboBoxLayout)

        # Window Combo Box
        self.windowComboBoxLayout = QtWidgets.QHBoxLayout()
        self.label_52 = QtWidgets.QLabel("Window:")
        self.label_52.setObjectName("label_52")
        self.WindowcomboBox = QtWidgets.QComboBox()
        self.WindowcomboBox.setObjectName("WindowcomboBox")
        self.WindowcomboBox.addItems(["boxcar", "hann", "hamming"])
        self.WindowcomboBox.setToolTip("Select window type for periodogram")
        self.windowComboBoxLayout.addWidget(self.label_52)
        self.windowComboBoxLayout.addWidget(self.WindowcomboBox)

        # Add Window Layout to Periodogram Layout
        self.periodogramLayout.addLayout(self.windowComboBoxLayout)

        # Add Periodogram Group to Settings Layout
        self.settingsLayout.addWidget(self.periodogramGroup)
        spacerItem8 = QtWidgets.QSpacerItem(20, 238, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.settingsLayout.addItem(spacerItem8)

        # Right Panel (Graphs)
        self.graphsGroupBox = QtWidgets.QGroupBox("")
        self.graphsGroupBox.setStyleSheet("font-size: 12px; font-weight: bold;")
        self.graphsLayout = QtWidgets.QVBoxLayout(self.graphsGroupBox)

        self.mplwindow = QtWidgets.QFrame()
        self.mplwindow.setFrameShape(QtWidgets.QFrame.Box)
        self.mplwindow.setFrameShadow(QtWidgets.QFrame.Raised)
        self.mplwindow.setObjectName("mplwindow")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.mplwindow)
        self.graphsLayout.addWidget(self.mplwindow)

        # self.graphsLayout.addWidget(self.graphsGroupBox)
        # self.gridLayout_7.addWidget(self.mplwindow, 1, 1, 1, 1)

        # Add Navigation and Save Buttons beside the Plot
        self.plotButtonsLayout = QtWidgets.QHBoxLayout()

        # Previous Button
        self.prevBtn = QtWidgets.QPushButton("Previous")
        self.prevBtn.setToolTip("Show the previous plot")
        self.plotButtonsLayout.addWidget(self.prevBtn)

        # Next Button
        self.nextBtn = QtWidgets.QPushButton("Next")
        self.nextBtn.setToolTip("Show the next plot")
        self.plotButtonsLayout.addWidget(self.nextBtn)

        # Save Button
        self.savePlotBtn = QtWidgets.QPushButton("Save Plot")
        self.savePlotBtn.setToolTip("Save the currently displayed plot")
        self.plotButtonsLayout.addWidget(self.savePlotBtn)

        # Add the buttons layout to the graphs layout
        self.graphsLayout.addLayout(self.plotButtonsLayout)

        # Add the graphs group box to the main grid layout
        self.gridLayout_7.addWidget(self.graphsGroupBox, 1, 1, 1, 1)

        # ### Results Table Section (Now below the Image Display) ###
        # self.tableGroup = QtWidgets.QGroupBox("Results Table", self.Image_6)
        # self.tableLayout = QtWidgets.QVBoxLayout(self.tableGroup)
        #
        # self.resultTable = QtWidgets.QTableWidget(self.tableGroup)
        # self.resultTable.setColumnCount(4)  # Adjust columns for properties dynamically
        # self.resultTable.setHorizontalHeaderLabels(["Object ID", "Surface Area", "Perimeter", "Eccentricity"])
        # self.tableLayout.addWidget(self.resultTable)
        #
        # # Add the results table below the image display
        # self.rightPanel.addWidget(self.tableGroup)

        # Results Table
        self.SignaltableGroup = QtWidgets.QGroupBox("Results Table")
        self.tableLayout = QtWidgets.QVBoxLayout(self.SignaltableGroup)
        self.SignalresultsTable = QtWidgets.QTableWidget(self.SignaltableGroup)
        self.SignalresultsTable.setColumnCount(2)
        self.SignalresultsTable.setHorizontalHeaderLabels(["Metric", "Value"])
        self.SignalresultsTable.horizontalHeader().setStretchLastSection(True)
        self.SignalresultsTable.verticalHeader().setVisible(False)
        self.SignalresultsTable.setFixedHeight(100)
        self.SignalresultsTable.setColumnWidth(0, 450)  # Set the width of the first column (in pixels)
        self.graphsLayout.addWidget(self.SignalresultsTable)

        # Buttons for Exporting and Clearing Results
        self.resultsButtonsLayout = QtWidgets.QHBoxLayout()
        self.graphsLayout.addLayout(self.resultsButtonsLayout)

        self.btnCalculateMetrics = QtWidgets.QPushButton("Calculate Metrics")
        self.resultsButtonsLayout.addWidget(self.btnCalculateMetrics)

        self.exportButton = QtWidgets.QPushButton("Export Metrics")
        self.resultsButtonsLayout.addWidget(self.exportButton)

        self.clearButton = QtWidgets.QPushButton("Clear Results")
        self.resultsButtonsLayout.addWidget(self.clearButton)

        # Validate Button
        # self.pbValidate = QtWidgets.QPushButton("Validate")
        # self.pbValidate.setObjectName("pbValidate")
        # self.pbValidate.setToolTip("Apply the selected settings")
        # self.settingsLayout.addWidget(self.pbValidate)

        self.settingsLayout.addWidget(self.settingsGroupBox)
        self.stackedWidget.addWidget(self.Signal_6)

        #
        # # Image Display Section
        # self.imageDisplayGroup = QtWidgets.QGroupBox("Image Display", self.Image_6)
        # self.imageDisplayLayout = QtWidgets.QVBoxLayout(self.imageDisplayGroup)
        #
        # self.labelOriginalImage = QtWidgets.QLabel("Original Image", self.imageDisplayGroup)
        # self.labelOriginalImage.setAlignment(QtCore.Qt.AlignCenter)
        # self.labelOriginalImage.setFrameShape(QtWidgets.QFrame.Box)
        # self.labelOriginalImage.setMinimumSize(400, 300)
        # self.imageDisplayLayout.addWidget(self.labelOriginalImage)
        #
        # self.labelSegmentedImage = QtWidgets.QLabel("Segmented Image", self.imageDisplayGroup)
        # self.labelSegmentedImage.setAlignment(QtCore.Qt.AlignCenter)
        # self.labelSegmentedImage.setFrameShape(QtWidgets.QFrame.Box)
        # self.labelSegmentedImage.setMinimumSize(400, 300)
        # self.imageDisplayLayout.addWidget(self.labelSegmentedImage)


        # self.labelOriginalImage.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        # self.labelSegmentedImage.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        # self.labelOriginalImage.setScaledContents(True)
        # self.labelSegmentedImage.setScaledContents(True)

        # self.image6Layout.addWidget(self.imageDisplayGroup, stretch=2)

        # Ensure the layout updates dynamically
        # self.Image_6.setLayout(self.image6Layout)

        # Grayscale Conversion Button
        self.Image_6 = QtWidgets.QWidget()
        self.Image_6.setObjectName("Image_6")

        # Create the main layout for the Image_6 widget
        self.image6Layout = QtWidgets.QHBoxLayout(self.Image_6)

        # Segmentation Controls Panel
        self.segmentationControls = QtWidgets.QGroupBox("Image Processing Controls", self.Image_6)
        self.segmentationControlsLayout = QtWidgets.QVBoxLayout(self.segmentationControls)

        ### Load Image Section ###
        self.loadImageGroup = QtWidgets.QGroupBox("Load Image")
        self.loadImageLayout = QtWidgets.QVBoxLayout(self.loadImageGroup)

        self.btnLoadImage = QtWidgets.QPushButton("Load Image", self.loadImageGroup)
        self.btnLoadImage.setStyleSheet("background-color: #007bff; color: white; padding: 5px; border-radius: 5px;")

        self.loadImageLayout.addWidget(self.btnLoadImage)

        self.segmentationControlsLayout.addWidget(self.loadImageGroup)

        # Grayscale and Thresholding Section
        self.grayscaleThresholdGroup = QtWidgets.QGroupBox("Intensity Adjustments")
        self.grayscaleThresholdLayout = QtWidgets.QHBoxLayout(self.grayscaleThresholdGroup)

        # Grayscale Conversion
        self.btnGrayscale = QtWidgets.QPushButton("Grayscale", self.grayscaleThresholdGroup)
        self.grayscaleThresholdLayout.addWidget(self.btnGrayscale)

        # Thresholding
        self.thresholdLayout = QtWidgets.QVBoxLayout()
        self.sliderThreshold = QtWidgets.QSlider(QtCore.Qt.Horizontal, self.grayscaleThresholdGroup)
        self.sliderThreshold.setMinimum(0)
        self.sliderThreshold.setMaximum(255)
        self.sliderThreshold.setValue(128)
        self.thresholdValueLabel = QtWidgets.QLabel(
                f"Threshold Level: {self.sliderThreshold.value()} (Min: 0, Max: 255)")
        self.finalizeThresholdCheckbox = QtWidgets.QCheckBox("Finalize Threshold", self.grayscaleThresholdGroup)
        self.finalizeThresholdCheckbox.setEnabled(False)  # Initially disabled


        self.thresholdLayout.addWidget(self.thresholdValueLabel)
        self.thresholdLayout.addWidget(self.sliderThreshold)
        self.thresholdLayout.addWidget(self.finalizeThresholdCheckbox)
        self.grayscaleThresholdLayout.addLayout(self.thresholdLayout)

        self.segmentationControlsLayout.addWidget(self.grayscaleThresholdGroup)


        ### Noise Reduction Group ###
        self.noiseReductionGroup = QtWidgets.QGroupBox("Noise Reduction &amp; Sharpness")
        self.noiseReductionLayout = QtWidgets.QHBoxLayout(self.noiseReductionGroup)

        # Denoising
        self.btnDenoise = QtWidgets.QPushButton("Apply Denoising")
        self.noiseReductionLayout.addWidget(self.btnDenoise)

        # Blurring
        self.btnBlur = QtWidgets.QPushButton("Apply Gaussian Blur")
        self.noiseReductionLayout.addWidget(self.btnBlur)

        # Sharpening
        self.btnSharpen = QtWidgets.QPushButton("Apply Image Sharpening")
        self.noiseReductionLayout.addWidget(self.btnSharpen)

        self.segmentationControlsLayout.addWidget(self.noiseReductionGroup)

        # Edge Detection Section
        self.edgeDetectionGroup = QtWidgets.QGroupBox("Edge Detection")
        self.edgeLayout = QtWidgets.QVBoxLayout(self.edgeDetectionGroup)

        self.btnEdgeDetection = QtWidgets.QPushButton("Apply Canny Edge Detection", self.edgeDetectionGroup)
        self.edgeLayout.addWidget(self.btnEdgeDetection)

        self.segmentationControlsLayout.addWidget(self.edgeDetectionGroup)

        ### Morphological Operations Section ###
        self.morphGroup = QtWidgets.QGroupBox("Morphological Operations")
        self.morphLayout = QtWidgets.QVBoxLayout(self.morphGroup)

        self.btnClearBorders = QtWidgets.QPushButton("Clear Borders")
        self.morphLayout.addWidget(self.btnClearBorders)

        self.btnRemoveSmallObjects = QtWidgets.QPushButton("Remove Small Objects", self.morphGroup)
        self.morphLayout.addWidget(self.btnRemoveSmallObjects)

        self.btnFillHoles = QtWidgets.QPushButton("Fill Holes")
        self.morphLayout.addWidget(self.btnFillHoles)

        self.btnErosion = QtWidgets.QPushButton("Erosion", self.morphGroup)
        self.morphLayout.addWidget(self.btnErosion)

        self.btnDilation = QtWidgets.QPushButton("Dilation", self.morphGroup)
        self.morphLayout.addWidget(self.btnDilation)

        self.segmentationControlsLayout.addWidget(self.morphGroup)

        ### Region Properties Section ###
        self.regionPropsGroup = QtWidgets.QGroupBox("Region Properties")
        self.regionPropsLayout = QtWidgets.QHBoxLayout(self.regionPropsGroup)

        self.labelRegionProps = QtWidgets.QLabel("Select Properties:")
        self.regionPropsLayout.addWidget(self.labelRegionProps)

        self.comboRegionProps = QtWidgets.QComboBox(self.regionPropsGroup)
        self.comboRegionProps.addItems(["Surface Area", "Perimeter", "Eccentricity", "All"])
        self.regionPropsLayout.addWidget(self.comboRegionProps)

        self.btnCalculateProps = QtWidgets.QPushButton("Calculate Properties")
        self.regionPropsLayout.addWidget(self.btnCalculateProps)

        self.segmentationControlsLayout.addWidget(self.regionPropsGroup)


        # Add controls to the main layout
        self.image6Layout.addWidget(self.segmentationControls)

        ### Right Panel: Image Display and Results Table ###
        self.rightPanel = QtWidgets.QVBoxLayout()  # Vertical layout for images and table

        # Image Display Section
        self.imageDisplayGroup = QtWidgets.QGroupBox("Image Display", self.Image_6)
        self.imageDisplayLayout = QtWidgets.QHBoxLayout(self.imageDisplayGroup)


        # Original Image Display
        self.labelOriginalImage = QtWidgets.QLabel("Original Image")
        self.labelOriginalImage.setAlignment(QtCore.Qt.AlignCenter)
        # self.labelOriginalImage.setFrameShape(QtWidgets.QFrame.Box)
        # self.labelOriginalImage.setSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        self.labelOriginalImage.setMinimumSize(450, 300)
        self.imageDisplayLayout.addWidget(self.labelOriginalImage)

        # Processed Image Display
        self.labelProcessedImage = QtWidgets.QLabel("Processed Image")
        self.labelProcessedImage.setAlignment(QtCore.Qt.AlignCenter)
        # self.labelProcessedImage.setFrameShape(QtWidgets.QFrame.Box)
        # self.labelProcessedImage.setSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        self.labelProcessedImage.setMinimumSize(450, 300)
        self.imageDisplayLayout.addWidget(self.labelProcessedImage)

        # self.labelOriginalImage.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        # self.labelProcessedImage.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        # self.labelOriginalImage.setScaledContents(True)
        # self.labelProcessedImage.setScaledContents(True)

        self.rightPanel.addWidget(self.imageDisplayGroup)

        # Add displays to the main layout
        # self.image6Layout.addWidget(self.imageDisplayGroup)

        ### Results Table Section (Now below the Image Display) ###
        self.tableGroup = QtWidgets.QGroupBox("Results Table", self.Image_6)
        self.tableLayout = QtWidgets.QVBoxLayout(self.tableGroup)

        self.resultTable = QtWidgets.QTableWidget(self.tableGroup)
        self.resultTable.setColumnCount(4)  # Adjust columns for properties dynamically
        self.resultTable.setHorizontalHeaderLabels(["Object ID", "Surface Area", "Perimeter", "Eccentricity"])
        self.tableLayout.addWidget(self.resultTable)
        self.tableGroup.setFixedHeight(200)

        # Add the results table below the image display
        self.rightPanel.addWidget(self.tableGroup)        # Set layout for Image_6

        # Export Button
        self.btnExportResults = QtWidgets.QPushButton("Export Results", self.tableGroup)
        self.btnExportResults.setToolTip("Export the table data")
        self.tableLayout.addWidget(self.btnExportResults)

        # Add the right panel to the main layout
        self.image6Layout.addLayout(self.rightPanel)

        self.Image_6.setLayout(self.image6Layout)
        # Additional Widgets for Clear, Undo, and Redo
        self.actionGroup = QtWidgets.QGroupBox("Actions")
        self.actionLayout = QtWidgets.QHBoxLayout(self.actionGroup)

        # Clear Display Button
        self.btnClearDisplay = QtWidgets.QPushButton("Clear Display")
        self.btnClearDisplay.setToolTip("Clear the images and results table")
        self.actionLayout.addWidget(self.btnClearDisplay)

        # Undo Button
        self.btnUndo = QtWidgets.QPushButton("Undo")
        self.btnUndo.setToolTip("Revert to the previous operation")
        self.actionLayout.addWidget(self.btnUndo)

        # Redo Button
        self.btnRedo = QtWidgets.QPushButton("Redo")
        self.btnRedo.setToolTip("Redo the last undone operation")
        self.actionLayout.addWidget(self.btnRedo)

        # Save Image Button
        self.btnSaveImage = QtWidgets.QPushButton("Save Image")
        self.btnSaveImage.setToolTip("Save the processed image")
        self.actionLayout.addWidget(self.btnSaveImage)

        self.segmentationControlsLayout.addWidget(self.actionGroup)

        self.horizontalLayout_panel1 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_panel1.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.horizontalLayout_panel1.setObjectName("horizontalLayout_panel1")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout_8.setContentsMargins(0, -1, -1, -1)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        spacerItem9 = QtWidgets.QSpacerItem(20, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_8.addItem(spacerItem9)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        spacerItem10 = QtWidgets.QSpacerItem(20, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_8.addItem(spacerItem10)

        spacerItem11 = QtWidgets.QSpacerItem(20, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_8.addItem(spacerItem11)
        spacerItem12 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_8.addItem(spacerItem12)
        self.horizontalLayout_panel1.addLayout(self.verticalLayout_8)
        self.stackedWidget.addWidget(self.Image_6)
        self.verticalLayout_26.addWidget(self.stackedWidget)
        self.horizontalLayout_8.addWidget(self.main_menu)
        self.verticalLayout_9.addLayout(self.horizontalLayout_8)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 20))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(2)
        self.tabWidget.setCurrentIndex(0)
        self.pbDataManagement1.toggled['bool'].connect(self.pbDataManagement2.setChecked) # type: ignore
        self.pbDataAnalysis1.toggled['bool'].connect(self.pbDataAnalysis2.setChecked) # type: ignore
        self.pbImageProcessing1.toggled['bool'].connect(self.pbImageProcessing2.setChecked) # type: ignore
        self.pbImageProcessing2.toggled['bool'].connect(self.pbImageProcessing1.setChecked) # type: ignore
        self.pbSpectrumAnalysis1.toggled['bool'].connect(self.pbSpectrumAnalysis2.setChecked) # type: ignore
        self.pbDataAnalysis2.toggled['bool'].connect(self.pbDataAnalysis1.setChecked) # type: ignore
        self.pbSpectrumAnalysis2.toggled['bool'].connect(self.pbSpectrumAnalysis1.setChecked) # type: ignore
        self.pbDataManagement2.toggled['bool'].connect(self.pbDataManagement1.setChecked) # type: ignore
        self.pbMenu.toggled['bool'].connect(self.icon_name_widget.setVisible) # type: ignore
        self.pbMenu.toggled['bool'].connect(self.icon_only_widget.setHidden) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def getFilterInputDialog(self):
            # Create a dialog to get filter inputs
            dialog = QtWidgets.QDialog()
            dialog.setWindowTitle("Filter Data")
            dialog.setFixedSize(300, 150)

            # Filter Field Label and ComboBox
            fieldLabel = QtWidgets.QLabel("Filter Field:", dialog)
            fieldLabel.setGeometry(20, 20, 100, 30)

            filterCriteria = QtWidgets.QComboBox(dialog)
            filterCriteria.setGeometry(120, 20, 150, 30)
            filterCriteria.addItems([ "All Data",  # Option to retrieve all records
                    "PatientID", "Age", "Sex", "Cholesterol", "BloodPressure", "HeartRate",
                    "Diabetes", "FamilyHistory", "Smoking",
                "Obesity", "AlcoholConsumption", "ExerciseHoursPerWeek", "Diet", "PreviousHeartProblems",
                "MedicationUse", "StressLevel", "SedentaryHoursPerDay", "Income", "BMI", "Triglycerides",
                "PhysicalActivityDaysPerWeek", "SleepHoursPerDay", "Country", "Continent", "Hemisphere", "HeartAttackRisk"
            ])

            # Filter Value Label and Input
            valueLabel = QtWidgets.QLabel("Filter Value:", dialog)
            valueLabel.setGeometry(20, 60, 100, 30)

            filterField = QtWidgets.QLineEdit(dialog)
            filterField.setGeometry(120, 60, 150, 30)

            # OK and Cancel Buttons
            okButton = QtWidgets.QPushButton("OK", dialog)
            okButton.setGeometry(50, 110, 80, 30)
            okButton.clicked.connect(dialog.accept)

            cancelButton = QtWidgets.QPushButton("Cancel", dialog)
            cancelButton.setGeometry(150, 110, 80, 30)
            cancelButton.clicked.connect(dialog.reject)

            # Show the dialog and get the result
            if dialog.exec() == QtWidgets.QDialog.Accepted:
                    selectedField = filterCriteria.currentText()
                    filterValue = filterField.text()
                    return selectedField, filterValue
            else:
                    return None

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pbDataManagement2.setText(_translate("MainWindow", "Patient Data Management"))
        self.pbDataAnalysis2.setText(_translate("MainWindow", "Data Analysis"))
        self.pbSpectrumAnalysis2.setText(_translate("MainWindow", "Spectrum Analysis"))
        self.pbImageProcessing2.setText(_translate("MainWindow", "Image Processing"))
        # self.ECGlabel.setText(_translate("MainWindow", "ECG Signal Analysis"))
        # self.label_46.setText(_translate("MainWindow", "Data Management"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Tab 1"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Tab 2"))
        # self.groupBox_.setTitle(_translate("MainWindow", "Settings"))
        self.LoadBtnsignal.setText(_translate("MainWindow", "Load Data"))
        self.LoadBtnsignal.setToolTip("Click to load ECG signal data.")
        self.label_3.setText(_translate("MainWindow", "Go to:"))
        self.timeInput.setText(_translate("MainWindow", "00:00:00"))
        self.label_2.setText(_translate("MainWindow", "Window duration:"))
        # self.windowDurationSlider.setText(_translate("MainWindow", "5 seconds"))
        # self.label_48.setText(_translate("MainWindow", "Parameters"))
        # self.label_49.setText(_translate("MainWindow", "Fast Fourier Transform"))
        self.label_50.setText(_translate("MainWindow", "Norm"))
        self.NormcomboBox.setCurrentText(_translate("MainWindow", "backward"))
        self.NormcomboBox.setItemText(0, _translate("MainWindow", "backward"))
        self.NormcomboBox.setItemText(1, _translate("MainWindow", "ortho"))
        self.NormcomboBox.setItemText(2, _translate("MainWindow", "forward"))
        self.NormcomboBox.setToolTip("Select the norm for the Fourier Transform.")
        # self.label_51.setText(_translate("MainWindow", "Periodogram"))
        self.label_52.setText(_translate("MainWindow", "Window"))
        self.WindowcomboBox.setCurrentText(_translate("MainWindow", "boxcar"))
        self.WindowcomboBox.setItemText(0, _translate("MainWindow", "boxcar"))
        self.WindowcomboBox.setItemText(1, _translate("MainWindow", "hamming"))
        self.WindowcomboBox.setItemText(2, _translate("MainWindow", "hann"))
        self.label_53.setToolTip(_translate("MainWindow", "Selects between computing the power spectral density (‘density’) where Pxx has units of V**2/Hz and computing the squared magnitude spectrum (‘spectrum’) where Pxx has units of V**2, if x is measured in V and fs is measured in Hz."))
        self.label_53.setText(_translate("MainWindow", "Scaling"))
        self.ScalingcomboBox.setCurrentText(_translate("MainWindow", "density"))
        self.ScalingcomboBox.setItemText(0, _translate("MainWindow", "density"))
        self.ScalingcomboBox.setItemText(1, _translate("MainWindow", "spectrum"))
        # self.pbValidate.setText(_translate("MainWindow", "Validate"))
        # # self.uipanel2.setTitle(_translate("MainWindow", "Image Preview"))
        # self.uipanel1.setTitle(_translate("MainWindow", "Settings"))
        # self.rbFaces.setText(_translate("MainWindow", "Faces"))
        # self.rbPoints.setText(_translate("MainWindow", "Points"))
        # self.rbWire.setText(_translate("MainWindow", "Wireframe"))
        # self.uipanelbackground.setTitle(_translate("MainWindow", "Background Color"))
#         self.rbWhite.setText(_translate("MainWindow", "Black"))
#         self.rbBlack.setText(_translate("MainWindow", "White"))
import resources_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
